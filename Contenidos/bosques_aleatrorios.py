# -*- coding: utf-8 -*-
"""Bosques_Aleatrorios.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NDo-rDazRjE_zoqf_wt6U79sbrSK3OL_
"""

# Aleatoriedad:
# Muestreo con reemplazo
# >>>>>>>max_samples<<<<<<<<<

import pandas as pd

personas = pd.read_csv("/content/ingresos.csv")

print(personas.sample(frac=2/3, replace=True))
print(personas.sample(frac=2/3, replace=True))
print(personas.sample(frac=2/3, replace=True))

# ======================================================================================

# Aleatoriedad:
# Selección de las Caraterísticas para Divisiones.

# >>>>>>>max_features = v/num_caracteristicas<<<<<

from random import sample

print(personas.columns[:-1], '\n')
print(sample(set(personas.columns[:-1]), 3))

# ======================================================================================

# Creación de Bosque Aleatorio (Ramdon Forest)

from sklearn.ensemble import RandomForestClassifier

bosque = RandomForestClassifier(n_estimators=100,
                                criterion='gini',
                                max_features='sqrt',
                                bootstrap=True,
                                max_samples=2/3,
                                oob_score=True)

bosque.fit(personas[personas.columns[:-1]].values, personas['ingreso'].values)

print(bosque.predict([[50, 16, 1, 1, 40]]))
print(bosque.score(personas[personas.columns[:-1]].values, personas['ingreso'].values))
print(bosque.oob_score_)

# ======================================================================================

# Visualización de Bosque Aleatorio
import matplotlib.pyplot as plt
from sklearn import tree

for arbol in bosque.estimators_:
  tree.plot_tree(arbol, feature_names=personas.columns[:-1])
  plt.show()